name: deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  MARKET_SOURCE: fanduel
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  ODDS_CACHE_DIR: .cache_odds
  ODDS_CACHE_TTL_DAYS: 2
  # Ensure Actions cache paths match code defaults
  CACHE_DIR: .cache_cfbd

# Serialize with other Pages publishers to avoid races
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Verify cache path configuration (fail only on mismatch)
        run: |
          set -euo pipefail
          CFBD_ENV_DIR="${CACHE_DIR:-.cache_cfbd}"
          ODDS_ENV_DIR="${ODDS_CACHE_DIR:-.cache_odds}"
          CFBD_EXPECT=".cache_cfbd"
          ODDS_EXPECT=".cache_odds"
          echo "CFBD cache (env): ${CFBD_ENV_DIR}  | expected workflow path: ${CFBD_EXPECT}"
          echo "ODDS cache (env): ${ODDS_ENV_DIR}  | expected workflow path: ${ODDS_EXPECT}"
          if [ "${CFBD_ENV_DIR}" != "${CFBD_EXPECT}" ] || [ "${ODDS_ENV_DIR}" != "${ODDS_EXPECT}" ]; then
            echo "::error::Cache path mismatch detected. Update either the workflow cache paths or the env values (CACHE_DIR/ODDS_CACHE_DIR) to match."
            echo "Details: CFBD_ENV_DIR='${CFBD_ENV_DIR}' vs EXPECT='${CFBD_EXPECT}', ODDS_ENV_DIR='${ODDS_ENV_DIR}' vs EXPECT='${ODDS_EXPECT}'"
            exit 1
          fi
          echo "Cache paths are consistent."

      - name: Restore API caches (CFBD & Odds)
        uses: actions/cache@v4
        with:
          path: |
            .cache_cfbd
            .cache_odds
          key: api-caches-${{ runner.os }}-${{ env.MARKET_SOURCE }}-${{ hashFiles('agents/collect_cfbd_all.py') }}
          restore-keys: |
            api-caches-${{ runner.os }}-${{ env.MARKET_SOURCE }}-
            api-caches-${{ runner.os }}-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r agents/requirements.txt

      - name: Check CFBD token (warning only)
        run: |
          if [ -z "${{ secrets.CFBD_BEARER_TOKEN }}" ]; then
            echo "::warning::CFBD_BEARER_TOKEN secret is empty. Without it, schedule may be tiny and FanDuel mapping will be skipped."
          else
            echo "CFBD_BEARER_TOKEN is present."
          fi

      - name: Run collector (live + backtest)
        env:
          BEARER_TOKEN: ${{ secrets.CFBD_BEARER_TOKEN }}
          MARKET_SOURCE: ${{ env.MARKET_SOURCE }}
          ODDS_API_KEY: ${{ env.ODDS_API_KEY }}
          ODDS_CACHE_DIR: ${{ env.ODDS_CACHE_DIR }}
          ODDS_CACHE_TTL_DAYS: ${{ env.ODDS_CACHE_TTL_DAYS }}
          CACHE_DIR: ${{ env.CACHE_DIR }}
          DEBUG_MARKET: 1
          REQUIRE_SCHED_MIN_ROWS: 0
          MARKET_MIN_ROWS: 1
        run: |
          # Run main collector; market_debug.json will be emitted by the script when available
          echo "MARKET_SOURCE (requested): ${MARKET_SOURCE}"
          python agents/collect_cfbd_all.py --market-source "${MARKET_SOURCE}" --year 2025 --backtest 2024
          echo "Collector finished; status.json:"
          test -f data/status.json && cat data/status.json || echo "status.json not found"
          echo "market_debug.json (if present):"
          test -f data/market_debug.json && cat data/market_debug.json || echo "market_debug.json not found"

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Build UI
        run: npm run build

      - name: Copy data into dist
        run: |
          mkdir -p dist/data
          if [ -d data ]; then
            cp -R data/* dist/data/ || true
          fi
          if [ -d public ]; then
            cp -R public/* dist/ || true
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Upload portable site bundle (for live workflow)
        uses: actions/upload-artifact@v4
        with:
          name: site-bundle
          path: dist
          retention-days: 3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4