name: Build & Deploy (UPA-F)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * *"   # daily at 09:00 UTC

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  UPA_YEAR: "2025"
  UPA_BACKTEST_YEAR: "2024"
  # Backtest runs only on scheduled builds by default
  RUN_BACKTEST: ${{ github.event_name == 'schedule' && '1' || '0' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Compute a daily cache key string (UTC) and export to env ---
      - name: Compute cache day
        run: |
          echo "CACHE_DAY=$(date -u +%F)" >> "$GITHUB_ENV"
          echo "Computed CACHE_DAY=$CACHE_DAY"

      # -------------------- Python setup & cache --------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f "agents/requirements.txt" ]; then
            pip install -r agents/requirements.txt
          else
            pip install cfbd pandas numpy
          fi

      # -------------------- Restore API cache (raw CFBD responses) --------------------
      - name: Restore API cache
        uses: actions/cache@v4
        with:
          path: data/.api_cache
          key: api-cache-${{ github.ref_name }}-${{ env.CACHE_DAY }}
          restore-keys: |
            api-cache-${{ github.ref_name }}-
            api-cache-

      # -------------------- Run collector (live + optional backtest) --------------------
      - name: Run collector (live + maybe backtest)
        env:
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          UPA_YEAR: ${{ env.UPA_YEAR }}
          UPA_BACKTEST_YEAR: ${{ env.UPA_BACKTEST_YEAR }}
          RUN_BACKTEST: ${{ env.RUN_BACKTEST }}
        run: |
          set -euo pipefail
          echo "RUN_BACKTEST=${RUN_BACKTEST}"
          if [ "${RUN_BACKTEST}" = "1" ]; then
            python agents/collect_cfbd_all.py --year "${UPA_YEAR}" --backtest "${UPA_BACKTEST_YEAR}"
          else
            python agents/collect_cfbd_all.py --year "${UPA_YEAR}" --backtest 0
          fi

      # -------------------- Diagnose data outputs (fail fast if empty) --------------------
      - name: Diagnose data outputs
        run: |
          set -e
          python agents/diagnose_run.py

      - name: Upload data artifact (for inspection)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data-folder
          path: data

      # -------------------- Save API cache back --------------------
      - name: Save API cache (noop on miss)
        if: always()
        uses: actions/cache/save@v4
        with:
          path: data/.api_cache
          key: api-cache-${{ github.ref_name }}-${{ env.CACHE_DAY }}

      # -------------------- Node setup & cache --------------------
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node deps
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      # -------------------- Upload & Deploy Pages --------------------
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4