name: deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  MARKET_SOURCE: fanduel
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  ODDS_CACHE_DIR: .cache_odds
  ODDS_CACHE_TTL_DAYS: 2

# Serialize with other Pages publishers to avoid races
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore API caches (CFBD & Odds)
        uses: actions/cache@v4
        with:
          path: |
            .cache_api
            .cache_odds
          key: api-caches-${{ runner.os }}-${{ env.MARKET_SOURCE }}-${{ hashFiles('agents/collect_cfbd_all.py') }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r agents/requirements.txt

      - name: Run collector (live + backtest)
        env:
          BEARER_TOKEN: ${{ secrets.CFBD_BEARER_TOKEN }}
          MARKET_SOURCE: ${{ env.MARKET_SOURCE }}
          ODDS_API_KEY: ${{ env.ODDS_API_KEY }}
          ODDS_CACHE_DIR: ${{ env.ODDS_CACHE_DIR }}
          ODDS_CACHE_TTL_DAYS: ${{ env.ODDS_CACHE_TTL_DAYS }}
          DEBUG_MARKET: 1
        run: |
          # Force a market-only pass first so we always write market_debug.json + status fields
          python -c "import os; import agents.collect_cfbd_all as m; m.market_debug_entry(2025, os.environ.get('MARKET_SOURCE'))"
          echo "MARKET_SOURCE (requested): ${MARKET_SOURCE}"
          python agents/collect_cfbd_all.py --market-source "${MARKET_SOURCE}" --year 2025 --backtest 2024
          echo "Collector finished; status.json:"
          cat data/status.json || true
          echo "market_debug.json:"
          cat data/market_debug.json || true

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Build UI
        run: npm run build

      - name: Copy data into dist
        run: |
          mkdir -p dist/data
          if [ -d data ]; then
            cp -R data/* dist/data/ || true
          fi
          if [ -d public ]; then
            cp -R public/* dist/ || true
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Upload portable site bundle (for live workflow)
        uses: actions/upload-artifact@v4
        with:
          name: site-bundle
          path: dist
          retention-days: 3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4