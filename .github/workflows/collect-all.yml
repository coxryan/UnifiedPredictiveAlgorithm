name: Collect data + Build & Deploy site (UPA-F)

on:
  workflow_dispatch:
    inputs:
      year:
        description: "Season year (defaults to 2025)"
        required: false
        type: string
  schedule:
    # Twice daily (UTC) â€” adjust as needed
    - cron: "15 5,17 * * *"
  push:
    branches: [ "main" ] # also deploy on commits to main (e.g., local edits)

# Required for Pages
permissions:
  contents: write       # we commit data/* updates back to main (optional but useful)
  pages: write          # deploy to GitHub Pages
  id-token: write       # needed by actions/deploy-pages

concurrency:
  group: upa-f-collect-build-deploy
  cancel-in-progress: false

env:
  PYTHONUNBUFFERED: "1"
  TZ: America/Phoenix
  # Year used by the collector; dispatch input wins else default 2025
  UPA_YEAR: ${{ github.event.inputs.year || '2025' }}
  # Optional: allow HTTP fallback if SDK returns 0 rows
  UPA_ALLOW_HTTP_FALLBACK: "0"
  # If your Vite config uses base from env, set it here (project pages):
  # Change this to your repo name (it must include the leading and trailing slash)
  VITE_BASE: "/UnifiedPredictiveAlgorithm/"

jobs:
  collect_build_deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----- Python collector -----
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install collector deps
        run: |
          python -m pip install --upgrade pip
          if [ -f agents/requirements.txt ]; then
            pip install -r agents/requirements.txt
          fi
          # Ensure these are present even if requirements.txt is minimal
          pip install cfbd pandas requests google-auth google-auth-oauthlib gspread

      - name: Run collector (writes data/*.csv + status.json)
        env:
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}     # REQUIRED
          SHEET_ID: ${{ secrets.SHEET_ID }}             # optional
          UPA_YEAR: ${{ env.UPA_YEAR }}
          UPA_ALLOW_HTTP_FALLBACK: ${{ env.UPA_ALLOW_HTTP_FALLBACK }}
        run: |
          set -e
          python agents/collect_cfbd_all.py
          echo "Collector finished. Listing /data:"
          ls -l data || true

      # Optional: commit the refreshed data back to main so it's versioned
      - name: Commit & push data updates
        run: |
          set -e
          if git status --porcelain data | grep .; then
            git config user.name  "github-actions"
            git config user.email "actions@github.com"
            git add data/*.csv data/status.json || true
            git commit -m "data: refresh (${{ env.UPA_YEAR }})"
            git pull --rebase origin main || true
            git push origin HEAD:main
          else
            echo "No data changes to commit."
          fi

      # ----- Node build for the portal -----
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install web deps
        run: npm ci

      - name: Build site
        env:
          # Provide base for Vite if your vite.config.ts reads process.env.VITE_BASE
          VITE_BASE: ${{ env.VITE_BASE }}
        run: npm run build

      # Ensure CSVs are included in the published site
      - name: Copy data artifacts into site bundle
        run: |
          mkdir -p dist/data
          cp -v data/*.csv dist/data/ || true
          cp -v data/status.json dist/data/ || true
          echo "Dist data contents:"
          ls -l dist/data || true

      # ----- Deploy to GitHub Pages -----
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4